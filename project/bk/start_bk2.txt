vdma0.writechannel.stop()
vdma0.writechannel.start()

vdma0.readchannel.stop()
vdma0.readchannel.start()
while True:
    t1=time.time()
    maps = vdma0.readchannel.readframe()
    gray = cv2.cvtColor(maps,cv2.COLOR_BGR2GRAY) 
    _,bw = cv2.threshold(gray, 200, 255, cv2.THRESH_BINARY)
    output = cv2.connectedComponentsWithStats(bw, 4, cv2.CV_32S)
    centroids = output[3]
    centroids = centroids[1::,:]
    t2=time.time()
    hh,ww = centroids.shape
    if hh == 3:
        object_2d_position[0, 0] =centroids[1,0]
        object_2d_position[0, 1] =centroids[1,1]
        object_2d_position[1, 0] =centroids[2,0]
        object_2d_position[1, 1] =centroids[2,1]
        object_2d_position[2, 0] =centroids[0,0]
        object_2d_position[2, 1] =centroids[0,1]
        object_2d_position[3, 0] =(centroids[0,0]+centroids[1,0]+centroids[2,0])/3
        object_2d_position[3, 1] =(centroids[0,1]+centroids[1,1]+centroids[2,1])/3
        _, rvec, tvec = cv2.solvePnP(object_3d_position, object_2d_position, stereo_cam_mt,stereo_cam_ds)  # 解算位姿
        distance = math.sqrt(tvec[0] ** 2 + tvec[1] ** 2 + tvec[2] ** 2)  # 计算距离
        rvec_matrix = cv2.Rodrigues(rvec)[0]  # 旋转向量->旋转矩阵
        proj_matrix = np.hstack((rvec_matrix, tvec))  # hstack: 水平合并
        eulerAngles = cv2.decomposeProjectionMatrix(proj_matrix)[6]  # 欧拉角
        thet_x, thet_y, thet_z = eulerAngles[0], eulerAngles[1], eulerAngles[2]
        #send_data = "Depth_distance: %.2fmm,3d pose: x: %.2f, y: %.2f, z: %.2f" % (distance, thet_x, thet_y, thet_z)
        send_data =" {\"key\":\"fpga_data\",\"rvec\":{\"x\":"+str(thet_y)+",\"y\":"+str(thet_x)+",\"z\":"+str(thet_z)+"},\"tvec\":{\"x\":"+str(tvec[0])+",\"y\":"+str(tvec[1])+",\"z\":"+str(tvec[2])+"}} "
        udp_socket.sendto(send_data.encode("utf-8"), (dst_ip, dst_port))
        cv2.putText(bw,'pos: '+ str(thet_x)+ ',' +str(thet_y)+','+str(thet_z) ,(20,50),cv2.FONT_HERSHEY_SIMPLEX,0.5,(255,255,255),1);
    gray3c = cv2.cvtColor(bw, cv2.COLOR_GRAY2RGB)    
    frame_out[:] = gray3c
    vdma0.writechannel.writeframe(frame_out)
    cv2.waitKey(20)